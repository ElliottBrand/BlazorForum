@*/*
    TODOs
    * Keep track of user answers count
    */
*@

@inject IManageUsers userManager
@inject IManageForumPosts managePosts

@if (IsSupportForum && !IsAnswer && (CurrentUserId == TopicAuthorId || isAdmin))
{
    <button class="btn btn-sm btn-success mb-2" @onclick="() => SetAnswerStatus(true)">Mark as Answer</button>
}
else if (IsSupportForum && IsAnswer && (CurrentUserId == TopicAuthorId || isAdmin))
{
    <button class="btn btn-sm btn-danger mb-2" @onclick="() => SetAnswerStatus(false)">Unmark as Answer</button>
}

@code {
    [Parameter] public bool IsSupportForum { get; set; }
    [Parameter] public bool IsAnswer { get; set; }
    [Parameter] public string TopicAuthorId { get; set; }
    [Parameter] public string CurrentUserId { get; set; }
    [Parameter] public int PostId { get; set; }
    [Parameter] public Action OnChange { get; set; }
    bool isAdmin;

    protected override async Task OnInitializedAsync()
    {
        isAdmin = await userManager.IsInRoleAsync("Administrator", CurrentUserId);
    }

    async void SetAnswerStatus(bool isAnswer)
    {
        IsAnswer = await managePosts.SetPostAnswerStatusAsync(PostId, isAnswer);
        StateHasChanged();
        OnChange.Invoke();
    }
}
